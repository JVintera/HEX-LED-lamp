// Code generated by Arduino IoT Cloud, DO NOT EDIT.

#include "wifiConfig.h"
#include <ArduinoIoTCloud.h>  // verze 1.15.1
#include <Arduino_ConnectionHandler.h>  // verze 0.8.1
#include "M5Atom.h"  // verze 0.1.2
#include "FastLED.h"  // verze 3.6.0

//Údaje k wifi a cloudu
const char DEVICE_LOGIN_NAME[] = SECRET_DEVICE_LOGIN_NAME;

const char SSID[] = SECRET_SSID;             // Network SSID (name)
const char PASS[] = SECRET_OPTIONAL_PASS;    // Network password (use for WPA, or use as key for WEP)
const char DEVICE_KEY[] = SECRET_DEVICE_KEY; // Secret device password

// LED pasek/modul WS2812B
#define Neopixel_PIN 26
#define NUM_LEDS 24
CRGB leds[NUM_LEDS];
uint8_t gHue = 0;
uint8_t ledsHue = 0;
uint8_t ledsSaturation = 50;
uint8_t ledsValue = 5;
int LED_brightness = 30;

// Integrovaná LED v M5Atom
#define Neopixel_PIN2 27
#define NUM_LEDS2 1
CRGB leds2[NUM_LEDS2];
int LED2_brightness = 15;

// Tlačítko
#define BTN_PIN 25
bool stateB = 0;     // Pomocná proměnná pro přepínání stavu LED
int BTN_last = 0;    // Proměnná pro uložení předešlého stavu tlačítka
int BTN_cur = 0;     // Proměnná pro uložení současného stavu tlačítka
int BTN_SW_last = 0; // Proměnná v Arduino IoT pro uložení předešlého stavu tlačítka
int BTN_SW_cur = 0;  // Proměnná v Aruino IoT pro uložení současného stavu tlačítka
bool BTN_SW_RainBow = 0; // Proměnná v Aruino IoT pro rozsvícení režimu Rainbow
bool BTN_SW_StarrLight = 0; // Proměnná v Aruino IoT pro rozsvícení režimu Starr light
bool BTN_SW_PoliceBeacon = 0; // Proměnná v Aruino IoT pro rozsvícení režimu Starr light
bool BTN_SW_Beacon = 0; // Proměnná v Aruino IoT pro rozsvícení režimu Starr light

// Funkce pro pro ovládání RGB Led
void onLedChange();
void onRainBowChange();
void onStarrLightChange();
void onBeaconChange();
void onPoliceBeaconChange();

CloudColoredLight led; // {"bri" : "100", "hue" : "19.319", "sat" : "100", "swi" : "true"}
bool rainBow;
bool starrLight;
bool beacon;
bool policeBeacon;

void initProperties()
{
    pinMode(BTN_PIN, INPUT_PULLUP); // Nastavení tlačítka - vnitřní Pull-up rezistor
    // Neopixel initialization
    FastLED.addLeds<WS2812B, Neopixel_PIN2, GRB>(leds2, NUM_LEDS2).setCorrection(TypicalLEDStrip);
    FastLED.setBrightness(LED2_brightness);
    FastLED.addLeds<WS2812B, Neopixel_PIN, GRB>(leds, NUM_LEDS).setCorrection(TypicalLEDStrip);
    FastLED.setBrightness(LED_brightness);
    // Na začátku se LED zhasnou
    fill_solid(leds, NUM_LEDS, CRGB(0, 0, 0));     // LED pásek zhasne
    fill_solid(leds2, NUM_LEDS2, CRGB(0, 0, 255)); // LED se rozsvítí modře
    FastLED.show();


    ArduinoCloud.setBoardId(DEVICE_LOGIN_NAME);
    ArduinoCloud.setSecretDeviceKey(DEVICE_KEY);
    ArduinoCloud.addProperty(led, READWRITE, ON_CHANGE, onLedChange);
    ArduinoCloud.addProperty(rainBow, READWRITE, ON_CHANGE, onRainBowChange);
    ArduinoCloud.addProperty(starrLight, READWRITE, ON_CHANGE, onStarrLightChange);
    ArduinoCloud.addProperty(beacon, READWRITE, ON_CHANGE, onBeaconChange);
    ArduinoCloud.addProperty(policeBeacon, READWRITE, ON_CHANGE, onPoliceBeaconChange);
}

WiFiConnectionHandler ArduinoIoTPreferredConnection(SSID, PASS);
